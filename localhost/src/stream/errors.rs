pub const ERROR_200_OK: &str = "[200] OK"; // not an error, but for consistency

pub const ERROR_400_BAD_REQUEST: &str = "[400] BAD REQUEST";
pub const ERROR_400_HEADERS_READ_TIMEOUT: &str = "[400] HEADERS READ TIMEOUT";
pub const ERROR_400_HEADERS_READING_STREAM: &str = "[400] HEADERS READING STREAM";
pub const ERROR_400_HEADERS_BUFFER_IS_EMPTY: &str = "[400] HEADERS BUFFER IS EMPTY";
pub const ERROR_400_HEADERS_LINES_IS_EMPTY: &str = "[400] HEADERS LINES IS EMPTY";
pub const ERROR_400_HEADERS_BUFFER_TO_STRING: &str = "[400] HEADERS BUFFER TO STRING";
pub const ERROR_400_HEADERS_FAILED_TO_PARSE: &str = "[400] HEADER FAILED TO PARSE";
pub const ERROR_400_HEADERS_INVALID_HEADER_NAME: &str = "[400] INVALID HEADER NAME";
pub const ERROR_400_HEADERS_INVALID_HEADER_VALUE: &str = "[400] INVALID HEADER VALUE";
pub const ERROR_400_HEADERS_INVALID_REQUEST_LINE: &str = "[400] INVALID REQUEST LINE";
pub const ERROR_400_HEADERS_INVALID_METHOD: &str = "[400] INVALID METHOD";
pub const ERROR_400_HEADERS_INVALID_URI: &str = "[400] INVALID URI";
pub const ERROR_400_HEADERS_INVALID_VERSION: &str = "[400] INVALID VERSION";
pub const ERROR_400_HEADERS_INVALID_COOKIE: &str = "[400] INVALID COOKIE";
pub const ERROR_400_HEADERS_KEY_NOT_FOUND: &str = "[400] KEY NOT FOUND";
pub const ERROR_400_HEADERS_FAILED_TO_GET_SERVER_CONFIG: &str =
"[400] FAILED TO GET SERVER CONFIG";

pub const ERROR_400_BODY_SUM_CHUNK_SIZE_READ_TIMEOUT: &str =
"[400] BODY SUM CHUNK SIZE READ TIMEOUT";
pub const ERROR_400_BODY_SUM_CHUNK_SIZE_READING_STREAM: &str =
"[400] BODY SUM CHUNK SIZE READING STREAM";
pub const ERROR_400_BODY_SUM_CHUNK_SIZE_PARSE: &str =
"[400] BODY SUM CHUNK SIZE PARSE";
pub const ERROR_400_BODY_CHUNKED_BUT_ZERO_SUM_CHUNK_SIZE: &str =
"[400] BODY CHUNKED BUT ZERO SUM CHUNK SIZE";
pub const ERROR_400_BODY_CHUNK_SIZE_READ_TIMEOUT: &str =
"[400] BODY CHUNK SIZE READ TIMEOUT";
pub const ERROR_400_BODY_CHUNK_SIZE_READING_STREAM: &str =
"[400] BODY CHUNK SIZE READING STREAM";
pub const ERROR_400_BODY_CHUNK_SIZE_PARSE: &str =
"[400] BODY CHUNK SIZE PARSE";
pub const ERROR_400_BODY_CHUNK_READ_TIMEOUT: &str =
"[400] BODY CHUNK READ TIMEOUT";
pub const ERROR_400_BODY_CHUNK_READING_STREAM: &str =
"[400] BODY CHUNK READING STREAM";
pub const ERROR_400_BODY_CHUNK_IS_BIGGER_THAN_CHUNK_SIZE: &str =
"[400] BODY CHUNK IS BIGGER THAN CHUNK SIZE";
pub const ERROR_400_BODY_BUFFER_LENGHT_IS_BIGGER_THAN_CONTENT_LENGTH: &str =
"[400] BODY BUFFER LENGHT IS BIGGER THAN CONTENT LENGTH";
pub const ERROR_400_BODY_READ_TIMEOUT: &str =
"[400] BODY READ TIMEOUT";
pub const ERROR_400_DIRTY_BODY_READ_TIMEOUT: &str =
"[400] DIRTY BODY READ TIMEOUT";
pub const ERROR_400_BODY_READING_STREAM: &str =
"[400] BODY READING STREAM";
pub const ERROR_413_BODY_SIZE_LIMIT: &str =
"[413] BODY SIZE LIMIT";

pub const ERROR_500_INTERNAL_SERVER_ERROR: &str = "[500] INTERNAL SERVER ERROR";

/// array of custom errors for 400 status code. To use in handle
pub const CUSTOM_ERRORS_400: [&str; 30] = [
ERROR_400_BAD_REQUEST,
ERROR_400_HEADERS_READ_TIMEOUT,
ERROR_400_HEADERS_READING_STREAM,
ERROR_400_HEADERS_BUFFER_IS_EMPTY,
ERROR_400_HEADERS_LINES_IS_EMPTY,
ERROR_400_HEADERS_BUFFER_TO_STRING,
ERROR_400_HEADERS_FAILED_TO_PARSE,
ERROR_400_HEADERS_INVALID_HEADER_NAME,
ERROR_400_HEADERS_INVALID_HEADER_VALUE,
ERROR_400_HEADERS_INVALID_REQUEST_LINE,
ERROR_400_HEADERS_INVALID_METHOD,
ERROR_400_HEADERS_INVALID_URI,
ERROR_400_HEADERS_INVALID_VERSION,
ERROR_400_HEADERS_INVALID_COOKIE,
ERROR_400_HEADERS_KEY_NOT_FOUND,
ERROR_400_HEADERS_FAILED_TO_GET_SERVER_CONFIG,
ERROR_400_BODY_SUM_CHUNK_SIZE_READ_TIMEOUT,
ERROR_400_BODY_SUM_CHUNK_SIZE_READING_STREAM,
ERROR_400_BODY_SUM_CHUNK_SIZE_PARSE,
ERROR_400_BODY_CHUNKED_BUT_ZERO_SUM_CHUNK_SIZE,
ERROR_400_BODY_CHUNK_SIZE_READ_TIMEOUT,
ERROR_400_BODY_CHUNK_SIZE_READING_STREAM,
ERROR_400_BODY_CHUNK_SIZE_PARSE,
ERROR_400_BODY_CHUNK_READ_TIMEOUT,
ERROR_400_BODY_CHUNK_READING_STREAM,
ERROR_400_BODY_CHUNK_IS_BIGGER_THAN_CHUNK_SIZE,
ERROR_400_BODY_BUFFER_LENGHT_IS_BIGGER_THAN_CONTENT_LENGTH,
ERROR_400_BODY_READ_TIMEOUT,
ERROR_400_DIRTY_BODY_READ_TIMEOUT,
ERROR_400_BODY_READING_STREAM,
];

/// array of custom errors for 413 status code. To use in handle
pub const CUSTOM_ERRORS_413: [&str; 1] = [
ERROR_413_BODY_SIZE_LIMIT,
];

/// array of custom errors for 500 status code. To use in handle
pub const CUSTOM_ERRORS_500: [&str; 1] = [
ERROR_500_INTERNAL_SERVER_ERROR,
];